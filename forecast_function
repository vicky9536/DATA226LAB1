CREATE OR REPLACE FUNCTION STOCK_PRICE_PREDICTION(symbol VARCHAR, historical_data ARRAY, forecast_periods INT, confidence_interval FLOAT)
RETURNS TABLE (symbol VARCHAR, forecast_date DATE, forecast FLOAT, lower_bound FLOAT, upper_bound FLOAT)
LANGUAGE PYTHON
RUNTIME_VERSION = '3.8'
PACKAGES = ('pandas', 'statsmodels')
HANDLER = 'StockPriceForecast'
AS
$$
import pandas as pd
from statsmodels.tsa.arima.model import ARIMA

class StockPriceForecast:
    def __init__(self):
        self._symbol = ""
        self._forecast_results = []

    def process(self, symbol, historical_data, forecast_periods, confidence_interval):
        self._symbol = symbol
        
        # Convert historical data to a Pandas DataFrame
        df = pd.DataFrame(historical_data, columns=["date", "price"])

        # Fit ARIMA model
        model = ARIMA(df['price'], order=(5, 1, 0))
        model_fit = model.fit()

        # Generate forecasts
        forecast, stderr, conf_int = model_fit.forecast(steps=forecast_periods, alpha=1-confidence_interval)

        # Generate future dates for the forecast
        forecast_dates = pd.date_range(start=df["date"].iloc[-1], periods=forecast_periods+1, freq="D")[1:]

        # Yield the forecast results, lower and upper bounds
        for i in range(forecast_periods):
            yield (symbol, forecast_dates[i], forecast[i], conf_int[i][0], conf_int[i][1])
$$;
